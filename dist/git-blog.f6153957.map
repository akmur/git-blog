{"version":3,"sources":["src/helpers/render.js","src/components/Header.js","src/components/About.js","src/components/Contacts.js","src/helpers/utils.js","src/helpers/getPostsListJson.js","node_modules/dayjs/dayjs.min.js","node_modules/dayjs/plugin/relativeTime.js","src/components/PostsList.js","src/helpers/getPostJson.js","node_modules/util/support/isBufferBrowser.js","node_modules/inherits/inherits_browser.js","node_modules/process/browser.js","node_modules/util/util.js","node_modules/markdown/lib/markdown.js","node_modules/markdown/lib/index.js","src/components/PostSingle.js","src/components/Home.js","src/components/Switch.js","../src/index.js","src/App.js","index.js"],"names":["render","target","content","document","querySelector","innerHTML","Header","About","title","Contacts","onlyTitle","replace","c","toUpperCase","removeExtension","onlyDate","exec","onlySlug","toLowerCase","fetchUrl","url","fetch","then","response","json","myJson","sessionStorage","setItem","JSON","stringify","map","item","name","date","githubLink","reverse","fetchSession","storedJson","sessionPromise","Promise","resolve","reject","sessionJSON","parse","getPostsListJson","slug","getItem","PostsList","posts","index","itemLink","itemTitle","itemDate","to","join","html","dayjs","extend","relativeTime","decodeURI","atob","getPostJson","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","formatRegExp","format","f","isString","objects","inspect","str","String","x","Number","_","isNull","isObject","deprecate","fn","msg","isUndefined","global","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","console","trace","error","debugEnviron","debugs","obj","opts","ctx","seen","stylize","stylizeNoColor","formatValue","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","styleType","style","styles","arrayToHash","hash","forEach","val","idx","value","recurseTimes","isFunction","constructor","ret","primitive","formatPrimitive","keys","Object","visibleKeys","isError","getOwnPropertyNames","indexOf","formatError","isRegExp","RegExp","toString","isDate","Date","base","output","braces","isArray","toUTCString","formatArray","key","formatProperty","pop","reduceToSingleString","simple","isNumber","l","hasOwnProperty","match","desc","getOwnPropertyDescriptor","get","set","split","line","substr","reduce","prev","cur","numLinesEst","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","o","pad","n","debuglog","test","pid","isBuffer","require","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","log","inherits","origin","add","PostSingle","markdown","toHTML","Home","Switch","switchTrigger","body","currentTheme","localStorage","classList","setAttribute","addEventListener","event","blur","newTheme","getAttribute","className","isPushStateAvailable","window","history","pushState","Navigo","r","useHash","root","_routes","_useHash","_hash","_paused","_destroyed","_lastRouteResolved","_notFoundHandler","_defaultHandler","_usePushState","_onLocationChange","this","bind","_genericHooks","_historyAPIUpdateMethod","_cLoc","_listen","updatePageLinks","clean","s","getUrlDepth","compareUrlDepth","urlA","urlB","routes","route","paramNames","regexp","PARAMETER_REGEXP","full","dots","REPLACE_VARIABLE_REGEXP","WILDCARD_REGEXP","REPLACE_WILDCARD","FOLLOWED_BY_SLASH_REGEXP","MATCH_REGEXP_FLAGS","replaceDynamicURLParts","params","names","slice","decodeURIComponent","filter","m","matched","fallbackURL","result","getOnlyURL","cleanGETParam","manageHooks","handler","hooks","before","after","path","absolute","_getRoot","location","href","func","_typeof","uses","_add","sort","current","GETParameters","onlyURL","query","already","_callLeave","_this2","_listeningInterval","removeEventListener","self","_findLinks","link","hasListenerAttached","ctrlKey","metaKey","tagName","getLinkPath","preventDefault","navigate","data","status","pause","destroy","encodeURI","as","cached","check","_this3","__NAVIGO_WINDOW_LOCATION_MOCK__","querySelectorAll","lastRouteResolved","leave","router","App","about","contacts"],"mappings":"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","file":"git-blog.f6153957.map","sourceRoot":"..","sourcesContent":["export default function render(target, content) {\n  document.querySelector(target).innerHTML = content\n}\n","import render from '../helpers/render'\n\nexport default function Header() {\n  return `\n  <div class=\"header\">\n  <a href=\"/\" class=\"logo\">\n    <svg class=\"logo__triangle logo__triangle--left\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"217 167 106 96\" style=\"isolation:isolate\">\n        <path stroke-linecap=\"square\" stroke-linejoin=\"miter\" stroke-miterlimit=\"3\" stroke-width=\"2\" d=\"M220 260l50-90 50 90H220z\" vector-effect=\"non-scaling-stroke\"/>\n    </svg>\n    <svg class=\"logo__triangle logo__triangle--center\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"217 167 106 96\" style=\"isolation:isolate\">\n        <path stroke-linecap=\"square\" stroke-linejoin=\"miter\" stroke-miterlimit=\"3\" stroke-width=\"2\" d=\"M220 260l50-90 50 90H220z\" vector-effect=\"non-scaling-stroke\"/>\n    </svg>\n    <svg class=\"logo__triangle logo__triangle--right\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"217 167 106 96\" style=\"isolation:isolate\">\n        <path stroke-linecap=\"square\" stroke-linejoin=\"miter\" stroke-miterlimit=\"3\" stroke-width=\"2\" d=\"M220 260l50-90 50 90H220z\" vector-effect=\"non-scaling-stroke\"/>\n    </svg>\n  </a>\n  <div id=\"nav\">\n    <nav class=\"nav\">\n      <ul class=\"nav__list\">\n        <li class=\"nav__item\">\n          <a href=\"/\" class=\"nav__link\">Home</a>\n        </li>\n        <li class=\"nav__item\">\n          <a href=\"/#!/about\" class=\"nav__link\">About</a>\n        </li>\n        <li class=\"nav__item\">\n          <a href=\"/#!/posts\" class=\"nav__link\">Posts</a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</div>\n  `\n}\n","import Header from './Header'\nimport render from '../helpers/render'\n\nexport default function About() {\n  document.title = 'About - Alessandro Muraro - Frontend Developer'\n  document.querySelector('#nav').innerHTML = Header()\n  render(\n    '#content',\n    `\n    <div class=\"pageContent\">\n      <div class=\"contentBlock\">\n        <h2 class=\"contentBlock__title\">Who I am</h2>\n        <div class=\"contentBlock__description\">\n          I am a frontend developer born in \n          <a\n            target=\"blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.google.de/maps/place/Milan,+Metropolitan+City+of+Milan,+Italy/data=!4m2!3m1!1s0x4786c1493f1275e7:0x3cffcd13c6740e8d?sa=X&ved=2ahUKEwjn94f73Y_eAhWihqYKHc2yAnAQ8gEwAHoECAAQAQ\"\n          >\n            Milano, Italy\n          </a>\n          , and currently based in \n          <a\n            href=\"https://www.google.de/maps/place/Aachen/@50.7595961,5.9564421,11z/data=!3m1!4b1!4m5!3m4!1s0x47c0997cb08a191d:0x63a30eae0b0e444f!8m2!3d50.7753455!4d6.0838868\"\n            target=\"blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Aachen, Germany\n          </a>\n          <br />I started hacking away at the web back in 1999, but it was just\n          my hobby for many years. In 2011, I started my professional career in\n          frontend development. <br />\n          Over the last 15 (!) years or so, I have been living around Europe:\n          Italy \n          <span role=\"img\" aria-label=\"italian flag\">\n            🇮🇹\n          </span>\n          , the Netherlands \n          <span role=\"img\" aria-label=\"dutch flag\">\n            🇳🇱\n          </span>\n          , Ireland \n          <span role=\"img\" aria-label=\"irish flag\">\n            🇮🇪\n          </span>\n          , and now Germany \n          <span role=\"img\" aria-label=\"german flag\">\n            🇩🇪\n          </span>, where I live with my wife Antonella, my kid Matteo, and my dogs Mela and Tobi.\n        </div>\n      </div>\n      <div class=\"contentBlock\">\n        <div class=\"avatar\">\n          <img src=\"https://filedn.com/lmWxu5DGgw0FbsUS7mWpc3S/site-image.jpg\" />\n        </div>\n      </div>\n      <div class=\"contentBlock\">\n        <h2 class=\"contentBlock__title\">What I do</h2>\n        <div class=\"contentBlock__description\">\n          I am experienced in dealing with complex and/or legacy codebases,\n          which I love to refactor and get back into shape. I'm always learning\n          new technologies which I apply responsibly, careful not to create\n          technical debt. I specialize in coding modular, component-based\n          websites. I am passionate about clean, maintainable, readable code and\n          I fight the good fight against \n          <a\n            href=\"https://en.wikipedia.org/wiki/Software_entropy\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >software entropy</a>.\n        </div>\n      </div>\n      <div class=\"contentBlock\">\n        <h2 class=\"contentBlock__title\">What I've done</h2>\n        <div class=\"contentBlock__description\">\n          <ul class=\"cvlist\">\n            <li class=\"cvlist__item\">\n              <a class=\"link\" href=\"http://navabi.de/\" target=\"blank\">navabi GmbH</a> \n              🇩🇪, Frontend developer, Since April 2017\n            </li>\n            <li class=\"cvlist__item\">\n              <a\n                class=\"link\"\n                href=\"http://www.objectway.it/IT/default.asp\"\n                target=\"blank\"\n              >Objectway</a> 🇮🇹 Frontend developer, 2015 to 2017\n            </li>\n            <li class=\"cvlist__item\">\n              <a\n                class=\"link\"\n                href=\"http://www.thelevelgroup.com/\"\n                target=\"blank\"\n              >The Level Group</a> 🇮🇹 Frontend developer, 2014 to 2015\n            </li>\n            <li class=\"cvlist__item\">\n              <a class=\"link\" href=\"http://www.pazienti.it/\" target=\"blank\">Pazienti</a> \n              🇮🇹 Frontend developer / UX / UI, 2011 to 2014\n            </li>\n            <li class=\"cvlist__item\">\n              <a class=\"link\" href=\"http://www.apple.com/\" target=\"blank\">\n                Apple</a> 🇮🇪 Tech support, 2003 to 2007\n            </li>\n            <li class=\"cvlist__item\">\n              <a class=\"link\" href=\"http://www.unisys.com/\" target=\"blank\">Unisys</a> 🇳🇱 Tech support, 2001 to 2003\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div class=\"contentBlock\">\n        <h3 class=\"contentBlock__title\">What I know</h3>\n        <div class=\"contentBlock__description\">\n          <div class=\"contentBlock__columnWrapper\">\n            <div class=\"contentBlock__column\">\n              <h4 class=\"contentBlock__smallTitle\">Core Skills</h4>\n              <ul class=\"cvlist\">\n                <li class=\"cvlist__item cvlist__item--tag\">HTML</li>\n                <li class=\"cvlist__item cvlist__item--tag\">CSS / SCSS</li>\n                <li class=\"cvlist__item cvlist__item--tag\">\n                  JavaScript ES6\n                </li>\n                <li class=\"cvlist__item cvlist__item--tag\">UX / UI</li>\n                <li class=\"cvlist__item cvlist__item--tag\">\n                  Web performance\n                </li>\n                <li class=\"cvlist__item cvlist__item--tag\">Git</li>\n                <li class=\"cvlist__item cvlist__item--tag\">Command Line</li>\n                <li class=\"cvlist__item cvlist__item--tag\">\n                  Fluent English / Native Italian\n                </li>\n              </ul>\n            </div>\n            <div class=\"contentBlock__column\">\n              <h4 class=\"contentBlock__smallTitle\">Frameworks & more</h4>\n              <ul class=\"cvlist\">\n                <li class=\"cvlist__item cvlist__item--tag\">\n                  React / Redux\n                </li>\n                <li class=\"cvlist__item cvlist__item--tag\">Express.js</li>\n                <li class=\"cvlist__item cvlist__item--tag\">jQuery</li>\n                <li class=\"cvlist__item cvlist__item--tag\">\n                  WordPress / WooCommerce\n                </li>\n                <li class=\"cvlist__item cvlist__item--tag\">\n                  Gulp / Grunt / NPM scripts\n                </li>\n                <li class=\"cvlist__item cvlist__item--tag\">Linters</li>\n                <li class=\"cvlist__item cvlist__item--tag\">\n                  Scrum / Agile methodologies\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"contentBlock\">\n        <h2 class=\"contentBlock__title\">Get in touch</h2>\n        <div class=\"contentBlock__description\">\n            You can follow me and message me on <a class=\"link\" href=\"https://twitter.com/akmur\">Twitter</a>, <a class=\"link\" href=\"https://webdev.network/@akmur\">Mastodon</a>, <a class=\"link\" href=\"https://www.linkedin.com/in/alessandromuraro/\">Linkedin</a> or <a class=\"link\" href=\"https://github.com/akmur\">Github</a>.\n        </div>\n      </div>\n      <div class=\"contentBlock\">\n        <div class=\"actions\">\n          <a\n            href=\"https://www.dropbox.com/s/vlqweze4o9kzwf9/Resume%20Alessandro%20Muraro.pdf?dl=0\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            class=\"actions__cta button\"\n          >\n            Download CV\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/alessandromuraro/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            class=\"actions__cta link\"\n          >\n            Go to Linkedin\n          </a>\n        </div>\n      </div>\n    </div>\n  `\n  )\n}\n","import render from '../helpers/render'\nimport Header from './Header'\n\nexport default function Contacts() {\n  document.title = 'Contacts - Alessandro Muraro - Frontend Developer'\n  document.querySelector('#nav').innerHTML = Header()\n  render(\n    '#content',\n    `\n    <div class=\"pageContent\">\n      <div class=\"contentBlock\">\n        <h2 class=\"contentBlock__title\">Get in touch</h2>\n        <div class=\"contentBlock__description\">\n            You can follow and message me on <a class=\"link\" href=\"https://twitter.com/akmur\">Twitter</a>, <a class=\"link\" href=\"https://webdev.network/@akmur\">Mastodon</a>, <a class=\"link\" href=\"https://www.linkedin.com/in/alessandromuraro/\">Linkedin</a> or <a class=\"link\" href=\"https://github.com/akmur\">Github</a>.\n        </div>\n      </div>\n    </div>\n  `\n  )\n}\n","/**\n * get title from file name\n *\n * @export\n * @param {string} title\n * @returns {string}\n */\nexport function onlyTitle(title) {\n  return title\n    .replace(/\\.md$/, '')\n    .replace(/^\\d{4}-\\d{1,2}-\\d{1,2}-/, '')\n    .replace(/-/g, ' ')\n    .replace(/^\\w/, c => c.toUpperCase())\n}\n\nexport function removeExtension(title) {\n  return title.replace(/\\.md$/, '')\n}\n\n/**\n * get publish date from file name\n *\n * @export\n * @param {string} title\n * @returns {string}\n */\nexport function onlyDate(title) {\n  return /^\\d{4}-\\d{1,2}-\\d{1,2}/.exec(title)[0]\n}\n\n/**\n * get slug from file name\n *\n * @export\n * @param {string} title\n * @returns {string}\n */\nexport function onlySlug(title) {\n  return title\n    .replace('.md', '')\n    .replace(/[^a-zA-Z ]/g, '')\n    .replace(/\\s+/g, '-')\n    .toLowerCase()\n}\n","import { onlyTitle, onlyDate, removeExtension } from './utils'\n\nfunction fetchUrl(url) {\n  return fetch(url)\n    .then(response => response.json())\n    .then(myJson => {\n      sessionStorage.setItem('postsList', JSON.stringify(myJson))\n      return myJson\n        .map(item => {\n          return {\n            title: onlyTitle(item.name),\n            date: onlyDate(item.name),\n            githubLink: removeExtension(item.name)\n          }\n        })\n        .reverse()\n    })\n}\n\nfunction fetchSession(storedJson) {\n  const sessionPromise = new Promise(function(resolve, reject) {\n    resolve(storedJson)\n  })\n\n  return sessionPromise.then(sessionJSON => {\n    const myJson = JSON.parse(sessionJSON)\n    return myJson\n      .map(item => {\n        return {\n          title: onlyTitle(item.name),\n          date: onlyDate(item.name),\n          githubLink: removeExtension(item.name)\n        }\n      })\n      .reverse()\n  })\n}\n\nexport function getPostsListJson(slug) {\n  const url = 'https://api.github.com/repos/akmur/mdposts/contents/posts/'\n  const storedJson = sessionStorage.getItem('postsList')\n\n  // check if value is in local storage\n  if (storedJson) {\n    return fetchSession(storedJson)\n  } else {\n    return fetchUrl(url)\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.dayjs=e()}(this,function(){\"use strict\";var t=\"millisecond\",e=\"second\",n=\"minute\",r=\"hour\",s=\"day\",i=\"week\",a=\"month\",u=\"year\",c=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})(.*?(\\d{1,2}):(\\d{1,2}):(\\d{1,2}))?.?(\\d{1,3})?$/,o=/\\[.*?\\]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,h={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},d=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},$={padStart:d,padZoneStr:function(t){var e=Math.abs(t),n=Math.floor(e/60),r=e%60;return(t<=0?\"+\":\"-\")+d(n,2,\"0\")+\":\"+d(r,2,\"0\")},monthDiff:function(t,e){var n=12*(e.year()-t.year())+(e.month()-t.month()),r=t.clone().add(n,\"months\"),s=e-r<0,i=t.clone().add(n+(s?-1:1),\"months\");return Number(-(n+(e-r)/(s?r-i:i-r)))},absFloor:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},prettyUnit:function(c){return{M:a,y:u,w:i,d:s,h:r,m:n,s:e,ms:t}[c]||String(c||\"\").toLowerCase().replace(/s$/,\"\")},isUndefined:function(t){return void 0===t}},f=\"en\",l={};l[f]=h;var m=function(t){return t instanceof D},y=function(t,e,n){var r;if(!t)return null;if(\"string\"==typeof t)l[t]&&(r=t),e&&(l[t]=e,r=t);else{var s=t.name;l[s]=t,r=s}return n||(f=r),r},M=function(t,e){if(m(t))return t.clone();var n=e||{};return n.date=t,new D(n)},S=function(t,e){return M(t,{locale:e.$L})},p=$;p.parseLocale=y,p.isDayjs=m,p.wrapper=S;var D=function(){function h(t){this.parse(t)}var d=h.prototype;return d.parse=function(t){var e,n;this.$d=null===(e=t.date)?new Date(NaN):p.isUndefined(e)?new Date:e instanceof Date?e:\"string\"==typeof e&&/.*[^Z]$/i.test(e)&&(n=e.match(c))?new Date(n[1],n[2]-1,n[3]||1,n[5]||0,n[6]||0,n[7]||0,n[8]||0):new Date(e),this.init(t)},d.init=function(t){this.$y=this.$d.getFullYear(),this.$M=this.$d.getMonth(),this.$D=this.$d.getDate(),this.$W=this.$d.getDay(),this.$H=this.$d.getHours(),this.$m=this.$d.getMinutes(),this.$s=this.$d.getSeconds(),this.$ms=this.$d.getMilliseconds(),this.$L=this.$L||y(t.locale,null,!0)||f},d.$utils=function(){return p},d.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},d.$compare=function(t){return this.valueOf()-M(t).valueOf()},d.isSame=function(t){return 0===this.$compare(t)},d.isBefore=function(t){return this.$compare(t)<0},d.isAfter=function(t){return this.$compare(t)>0},d.year=function(){return this.$y},d.month=function(){return this.$M},d.day=function(){return this.$W},d.date=function(){return this.$D},d.hour=function(){return this.$H},d.minute=function(){return this.$m},d.second=function(){return this.$s},d.millisecond=function(){return this.$ms},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,c){var o=this,h=!!p.isUndefined(c)||c,d=function(t,e){var n=S(new Date(o.$y,e,t),o);return h?n:n.endOf(s)},$=function(t,e){return S(o.toDate()[t].apply(o.toDate(),h?[0,0,0,0].slice(e):[23,59,59,999].slice(e)),o)};switch(p.prettyUnit(t)){case u:return h?d(1,0):d(31,11);case a:return h?d(1,this.$M):d(0,this.$M+1);case i:return d(h?this.$D-this.$W:this.$D+(6-this.$W),this.$M);case s:case\"date\":return $(\"setHours\",0);case r:return $(\"setMinutes\",1);case n:return $(\"setSeconds\",2);case e:return $(\"setMilliseconds\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(i,c){switch(p.prettyUnit(i)){case s:this.$d.setDate(this.$D+(c-this.$W));break;case\"date\":this.$d.setDate(c);break;case a:this.$d.setMonth(c);break;case u:this.$d.setFullYear(c);break;case r:this.$d.setHours(c);break;case n:this.$d.setMinutes(c);break;case e:this.$d.setSeconds(c);break;case t:this.$d.setMilliseconds(c)}return this.init(),this},d.set=function(t,e){return this.clone().$set(t,e)},d.add=function(t,c){var o=this;t=Number(t);var h,d=p.prettyUnit(c),$=function(e,n){var r=o.set(\"date\",1).set(e,n+t);return r.set(\"date\",Math.min(o.$D,r.daysInMonth()))};if(d===a)return $(a,this.$M);if(d===u)return $(u,this.$y);switch(d){case n:h=6e4;break;case r:h=36e5;break;case s:h=864e5;break;case i:h=6048e5;break;case e:h=1e3;break;default:h=1}var f=this.valueOf()+t*h;return S(f,this)},d.subtract=function(t,e){return this.add(-1*t,e)},d.format=function(t){var e=this,n=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=p.padZoneStr(this.$d.getTimezoneOffset()),s=this.$locale(),i=s.weekdays,a=s.months,u=function(t,e,n,r){return t&&t[e]||n[e].substr(0,r)};return n.replace(o,function(t){if(t.indexOf(\"[\")>-1)return t.replace(/\\[|\\]/g,\"\");switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return String(e.$y);case\"M\":return String(e.$M+1);case\"MM\":return p.padStart(e.$M+1,2,\"0\");case\"MMM\":return u(s.monthsShort,e.$M,a,3);case\"MMMM\":return a[e.$M];case\"D\":return String(e.$D);case\"DD\":return p.padStart(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return u(s.weekdaysMin,e.$W,i,2);case\"ddd\":return u(s.weekdaysShort,e.$W,i,3);case\"dddd\":return i[e.$W];case\"H\":return String(e.$H);case\"HH\":return p.padStart(e.$H,2,\"0\");case\"h\":case\"hh\":return 0===e.$H?12:p.padStart(e.$H<13?e.$H:e.$H-12,\"hh\"===t?2:1,\"0\");case\"a\":return e.$H<12?\"am\":\"pm\";case\"A\":return e.$H<12?\"AM\":\"PM\";case\"m\":return String(e.$m);case\"mm\":return p.padStart(e.$m,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return p.padStart(e.$s,2,\"0\");case\"SSS\":return p.padStart(e.$ms,3,\"0\");case\"Z\":return r;default:return r.replace(\":\",\"\")}})},d.diff=function(t,c,o){var h=p.prettyUnit(c),d=M(t),$=this-d,f=p.monthDiff(this,d);switch(h){case u:f/=12;break;case a:break;case\"quarter\":f/=3;break;case i:f=$/6048e5;break;case s:f=$/864e5;break;case r:f=$/36e5;break;case n:f=$/6e4;break;case e:f=$/1e3;break;default:f=$}return o?f:p.absFloor(f)},d.daysInMonth=function(){return this.endOf(a).$D},d.$locale=function(){return l[this.$L]},d.locale=function(t,e){var n=this.clone();return n.$L=y(t,e,!0),n},d.clone=function(){return S(this.toDate(),this)},d.toDate=function(){return new Date(this.$d)},d.toArray=function(){return[this.$y,this.$M,this.$D,this.$H,this.$m,this.$s,this.$ms]},d.toJSON=function(){return this.toISOString()},d.toISOString=function(){return this.toDate().toISOString()},d.toObject=function(){return{years:this.$y,months:this.$M,date:this.$D,hours:this.$H,minutes:this.$m,seconds:this.$s,milliseconds:this.$ms}},d.toString=function(){return this.$d.toUTCString()},h}();return M.extend=function(t,e){return t(e,D,M),M},M.locale=y,M.isDayjs=m,M.en=l[f],M});\n","!function(e,r){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define(r):e.dayjs_plugin_relativeTime=r()}(this,function(){\"use strict\";return function(e,r,t){var n=r.prototype;t.en.relativeTime={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};var o=function(e,r,n,o){for(var d,i,a=n.$locale().relativeTime,u=[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],f=u.length,s=0;s<f;s+=1){var l=u[s];l.d&&(d=o?t(e).diff(n,l.d,!0):n.diff(e,l.d,!0));var m=Math.ceil(Math.abs(d));if(m<=l.r||!l.r){i=a[l.l].replace(\"%d\",m);break}}return r?i:(d>0?a.future:a.past).replace(\"%s\",i)};n.to=function(e,r){return o(e,r,this,!0)},n.from=function(e,r){return o(e,r,this)},n.toNow=function(e){return this.to(t(),e)},n.fromNow=function(e){return this.from(t(),e)}}});\n","import Header from './Header'\nimport { getPostsListJson } from '../helpers/getPostsListJson'\nimport { onlyDate } from '../helpers/utils'\nimport dayjs from 'dayjs'\nimport render from '../helpers/render'\nimport relativeTime from 'dayjs/plugin/relativeTime'\ndayjs.extend(relativeTime)\n\nexport default function PostsList() {\n  document.title = `Posts - Alessandro Muraro - Frontend Developer`\n  document.querySelector('#nav').innerHTML = Header()\n\n  getPostsListJson().then(response => {\n    const posts = response\n      .map((item, index) => {\n        const itemLink = `/posts/${item.githubLink}`\n        const itemTitle = item.title\n        const itemDate = dayjs().to(dayjs(onlyDate(item.githubLink)))\n        return `\n        <li class=\"postsList__item\">\n          <a class=\"postsList__link\" href=${itemLink}>\n            <h2 class=\"postsList__title\">${itemTitle}</h2>\n            <span class=\"postsList__date\">${itemDate}</span>\n          </a>\n        </li>\n        `\n      })\n      .join('')\n\n    const html = `\n      <div class=\"postsList\">\n        <ul class=\"postsList__list\">\n          ${posts}\n        </ul>\n      </div>\n    `\n\n    render('#content', html)\n  })\n}\n","function fetchUrl(url) {\n  return fetch(decodeURI(url))\n    .then(response => response.json())\n    .then(myJson => {\n      sessionStorage.setItem(url, JSON.stringify(myJson))\n      return atob(myJson.content)\n    })\n}\n\nfunction fetchSession(storedJson) {\n  return new Promise(function(resolve, reject) {\n    resolve(storedJson)\n  })\n    .then(sessionJSON => {\n      return JSON.parse(sessionJSON)\n    })\n    .then(myJson => {\n      return atob(myJson.content)\n    })\n}\n\nexport function getPostJson(slug) {\n  const url =\n    'https://api.github.com/repos/akmur/mdposts/contents/posts/' + slug + '.md'\n  const storedJson = sessionStorage.getItem(url)\n\n  if (storedJson) {\n    return fetchSession(storedJson)\n  } else {\n    return fetchUrl(url)\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n/*jshint browser:true, devel:true */\n\n(function( expose ) {\n\n/**\n *  class Markdown\n *\n *  Markdown processing in Javascript done right. We have very particular views\n *  on what constitutes 'right' which include:\n *\n *  - produces well-formed HTML (this means that em and strong nesting is\n *    important)\n *\n *  - has an intermediate representation to allow processing of parsed data (We\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n *\n *  - is easily extensible to add new dialects without having to rewrite the\n *    entire parsing mechanics\n *\n *  - has a good test suite\n *\n *  This implementation fulfills all of these (except that the test suite could\n *  do with expanding to automatically run all the fixtures from other Markdown\n *  implementations.)\n *\n *  ##### Intermediate Representation\n *\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n *\n *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n **/\nvar Markdown = expose.Markdown = function(dialect) {\n  switch (typeof dialect) {\n    case \"undefined\":\n      this.dialect = Markdown.dialects.Gruber;\n      break;\n    case \"object\":\n      this.dialect = dialect;\n      break;\n    default:\n      if ( dialect in Markdown.dialects ) {\n        this.dialect = Markdown.dialects[dialect];\n      }\n      else {\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n      }\n      break;\n  }\n  this.em_state = [];\n  this.strong_state = [];\n  this.debug_indent = \"\";\n};\n\n/**\n *  parse( markdown, [dialect] ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n **/\nexpose.parse = function( source, dialect ) {\n  // dialect will default if undefined\n  var md = new Markdown( dialect );\n  return md.toTree( source );\n};\n\n/**\n *  toHTML( markdown, [dialect]  ) -> String\n *  toHTML( md_tree ) -> String\n *  - markdown (String): markdown string to parse\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Take markdown (either as a string or as a JsonML tree) and run it through\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n **/\nexpose.toHTML = function toHTML( source , dialect , options ) {\n  var input = expose.toHTMLTree( source , dialect , options );\n\n  return expose.renderJsonML( input );\n};\n\n/**\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\n *  toHTMLTree( md_tree ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n *  to this function, it is first parsed into a markdown tree by calling\n *  [[parse]].\n **/\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n  // convert string input to an MD tree\n  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\n  // Now convert the MD tree to an HTML tree\n\n  // remove references from the tree\n  var attrs = extract_attr( input ),\n      refs = {};\n\n  if ( attrs && attrs.references ) {\n    refs = attrs.references;\n  }\n\n  var html = convert_tree_to_html( input, refs , options );\n  merge_text_nodes( html );\n  return html;\n};\n\n// For Spidermonkey based engines\nfunction mk_block_toSource() {\n  return \"Markdown.mk_block( \" +\n          uneval(this.toString()) +\n          \", \" +\n          uneval(this.trailing) +\n          \", \" +\n          uneval(this.lineNumber) +\n          \" )\";\n}\n\n// node\nfunction mk_block_inspect() {\n  var util = require(\"util\");\n  return \"Markdown.mk_block( \" +\n          util.inspect(this.toString()) +\n          \", \" +\n          util.inspect(this.trailing) +\n          \", \" +\n          util.inspect(this.lineNumber) +\n          \" )\";\n\n}\n\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\n  // Be helpful for default case in tests.\n  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\n  var s = new String(block);\n  s.trailing = trail;\n  // To make it clear its not just a string\n  s.inspect = mk_block_inspect;\n  s.toSource = mk_block_toSource;\n\n  if ( line != undefined )\n    s.lineNumber = line;\n\n  return s;\n};\n\nfunction count_lines( str ) {\n  var n = 0, i = -1;\n  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n  return n;\n}\n\n// Internal - split source into rough blocks\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n  // [\\s\\S] matches _anything_ (newline or space)\n  // [^] is equivalent but doesn't work in IEs.\n  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n      blocks = [],\n      m;\n\n  var line_no = 1;\n\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n    // skip (but count) leading blank lines\n    line_no += count_lines( m[0] );\n    re.lastIndex = m[0].length;\n  }\n\n  while ( ( m = re.exec(input) ) !== null ) {\n    if (m[2] == \"\\n#\") {\n      m[2] = \"\\n\";\n      re.lastIndex--;\n    }\n    blocks.push( mk_block( m[1], m[2], line_no ) );\n    line_no += count_lines( m[0] );\n  }\n\n  return blocks;\n};\n\n/**\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n *  - block (String): the block to process\n *  - next (Array): the following blocks\n *\n * Process `block` and return an array of JsonML nodes representing `block`.\n *\n * It does this by asking each block level function in the dialect to process\n * the block until one can. Succesful handling is indicated by returning an\n * array (with zero or more JsonML nodes), failure by a false value.\n *\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\n * themselves as appropriate.\n *\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\n * can adjust `next` in place using shift/splice etc.\n *\n * If any of this default behaviour is not right for the dialect, you can\n * define a `__call__` method on the dialect that will get invoked to handle\n * the block processing.\n */\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\n  var cbs = this.dialect.block,\n      ord = cbs.__order__;\n\n  if ( \"__call__\" in cbs ) {\n    return cbs.__call__.call(this, block, next);\n  }\n\n  for ( var i = 0; i < ord.length; i++ ) {\n    //D:this.debug( \"Testing\", ord[i] );\n    var res = cbs[ ord[i] ].call( this, block, next );\n    if ( res ) {\n      //D:this.debug(\"  matched\");\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n        this.debug(ord[i], \"didn't return a proper array\");\n      //D:this.debug( \"\" );\n      return res;\n    }\n  }\n\n  // Uhoh! no match! Should we throw an error?\n  return [];\n};\n\nMarkdown.prototype.processInline = function processInline( block ) {\n  return this.dialect.inline.__call__.call( this, String( block ) );\n};\n\n/**\n *  Markdown#toTree( source ) -> JsonML\n *  - source (String): markdown source to parse\n *\n *  Parse `source` into a JsonML tree representing the markdown document.\n **/\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\n  // Make tree a member variable so its easier to mess with in extensions\n  var old_tree = this.tree;\n  try {\n    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\n    blocks:\n    while ( blocks.length ) {\n      var b = this.processBlock( blocks.shift(), blocks );\n\n      // Reference blocks and the like won't return any content\n      if ( !b.length ) continue blocks;\n\n      this.tree.push.apply( this.tree, b );\n    }\n    return this.tree;\n  }\n  finally {\n    if ( custom_root ) {\n      this.tree = old_tree;\n    }\n  }\n};\n\n// Noop by default\nMarkdown.prototype.debug = function () {\n  var args = Array.prototype.slice.call( arguments);\n  args.unshift(this.debug_indent);\n  if ( typeof print !== \"undefined\" )\n      print.apply( print, args );\n  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n      console.log.apply( null, args );\n}\n\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n  // Dont use /g regexps with this\n  var m,\n      b = block.valueOf();\n\n  while ( b.length && (m = re.exec(b) ) != null ) {\n    b = b.substr( m[0].length );\n    cb.call(this, m);\n  }\n  return b;\n};\n\n/**\n * Markdown.dialects\n *\n * Namespace of built-in dialects.\n **/\nMarkdown.dialects = {};\n\n/**\n * Markdown.dialects.Gruber\n *\n * The default dialect that follows the rules set out by John Gruber's\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\n * that script which in some places is not exactly what the syntax web page\n * says.\n **/\nMarkdown.dialects.Gruber = {\n  block: {\n    atxHeader: function atxHeader( block, next ) {\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var header = [ \"header\", { level: m[ 1 ].length } ];\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    setextHeader: function setextHeader( block, next ) {\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    code: function code( block, next ) {\n      // |    Foo\n      // |bar\n      // should be a code block followed by a paragraph. Fun\n      //\n      // There might also be adjacent code block to merge.\n\n      var ret = [],\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n          lines;\n\n      // 4 spaces + content\n      if ( !block.match( re ) ) return undefined;\n\n      block_search:\n      do {\n        // Now pull out the rest of the lines\n        var b = this.loop_re_over_block(\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\n        if ( b.length ) {\n          // Case alluded to in first comment. push it back on as a new block\n          next.unshift( mk_block(b, block.trailing) );\n          break block_search;\n        }\n        else if ( next.length ) {\n          // Check the next block - it might be code too\n          if ( !next[0].match( re ) ) break block_search;\n\n          // Pull how how many blanks lines follow - minus two to account for .join\n          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\n          block = next.shift();\n        }\n        else {\n          break block_search;\n        }\n      } while ( true );\n\n      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n    },\n\n    horizRule: function horizRule( block, next ) {\n      // this needs to find any hr in the block to handle abutting blocks\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\n      if ( !m ) {\n        return undefined;\n      }\n\n      var jsonml = [ [ \"hr\" ] ];\n\n      // if there's a leading abutting block, process it\n      if ( m[ 1 ] ) {\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n      }\n\n      // if there's a trailing abutting block, stick it into next\n      if ( m[ 3 ] ) {\n        next.unshift( mk_block( m[ 3 ] ) );\n      }\n\n      return jsonml;\n    },\n\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n    // between the items (and result in text just in the <li>) and loose lists,\n    // which have an empty line between list items, resulting in (one or more)\n    // paragraphs inside the <li>.\n    //\n    // There are all sorts weird edge cases about the original markdown.pl's\n    // handling of lists:\n    //\n    // * Nested lists are supposed to be indented by four chars per level. But\n    //   if they aren't, you can get a nested list by indenting by less than\n    //   four so long as the indent doesn't match an indent of an existing list\n    //   item in the 'nest stack'.\n    //\n    // * The type of the list (bullet or number) is controlled just by the\n    //    first item at the indent. Subsequent changes are ignored unless they\n    //    are for nested lists\n    //\n    lists: (function( ) {\n      // Use a closure to hide a few variables.\n      var any_list = \"[*+-]|\\\\d+\\\\.\",\n          bullet_list = /[*+-]/,\n          number_list = /\\d+\\./,\n          // Capture leading indent as it matters for determining nested lists.\n          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\n      // TODO: Cache this regexp for certain depths.\n      // Create a regexp suitable for matching an li for a given stack depth\n      function regex_for_depth( depth ) {\n\n        return new RegExp(\n          // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n          // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n        );\n      }\n      function expand_tab( input ) {\n        return input.replace( / {0,3}\\t/g, \"    \" );\n      }\n\n      // Add inline content `inline` to `li`. inline comes from processInline\n      // so is an array of content\n      function add(li, loose, inline, nl) {\n        if ( loose ) {\n          li.push( [ \"para\" ].concat(inline) );\n          return;\n        }\n        // Hmmm, should this be any block level element or just paras?\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n                   ? li[li.length -1]\n                   : li;\n\n        // If there is already some content in this list, add the new line in\n        if ( nl && li.length > 1 ) inline.unshift(nl);\n\n        for ( var i = 0; i < inline.length; i++ ) {\n          var what = inline[i],\n              is_str = typeof what == \"string\";\n          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n            add_to[ add_to.length-1 ] += what;\n          }\n          else {\n            add_to.push( what );\n          }\n        }\n      }\n\n      // contained means have an indent greater than the current one. On\n      // *every* line in the block\n      function get_contained_blocks( depth, blocks ) {\n\n        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n            ret = [];\n\n        while ( blocks.length > 0 ) {\n          if ( re.exec( blocks[0] ) ) {\n            var b = blocks.shift(),\n                // Now remove that indent\n                x = b.replace( replace, \"\");\n\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n          }\n          else {\n            break;\n          }\n        }\n        return ret;\n      }\n\n      // passed to stack.forEach to turn list items up the stack into paras\n      function paragraphify(s, i, stack) {\n        var list = s.list;\n        var last_li = list[list.length-1];\n\n        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n          return;\n        }\n        if ( i + 1 == stack.length ) {\n          // Last stack frame\n          // Keep the same array, but replace the contents\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n        }\n        else {\n          var sublist = last_li.pop();\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n        }\n      }\n\n      // The matcher function\n      return function( block, next ) {\n        var m = block.match( is_list_re );\n        if ( !m ) return undefined;\n\n        function make_list( m ) {\n          var list = bullet_list.exec( m[2] )\n                   ? [\"bulletlist\"]\n                   : [\"numberlist\"];\n\n          stack.push( { list: list, indent: m[1] } );\n          return list;\n        }\n\n\n        var stack = [], // Stack of lists for nesting.\n            list = make_list( m ),\n            last_li,\n            loose = false,\n            ret = [ stack[0].list ],\n            i;\n\n        // Loop to search over block looking for inner block elements and loose lists\n        loose_search:\n        while ( true ) {\n          // Split into lines preserving new lines at end of line\n          var lines = block.split( /(?=\\n)/ );\n\n          // We have to grab all lines for a li and call processInline on them\n          // once as there are some inline things that can span lines.\n          var li_accumulate = \"\";\n\n          // Loop over the lines in this block looking for tight lists.\n          tight_search:\n          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n            var nl = \"\",\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\n            // TODO: really should cache this\n            var line_re = regex_for_depth( stack.length );\n\n            m = l.match( line_re );\n            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\n            // We have a list item\n            if ( m[1] !== undefined ) {\n              // Process the previous list item, if any\n              if ( li_accumulate.length ) {\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\n                // Loose mode will have been dealt with. Reset it\n                loose = false;\n                li_accumulate = \"\";\n              }\n\n              m[1] = expand_tab( m[1] );\n              var wanted_depth = Math.floor(m[1].length/4)+1;\n              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n              if ( wanted_depth > stack.length ) {\n                // Deep enough for a nested list outright\n                //print ( \"new nested list\" );\n                list = make_list( m );\n                last_li.push( list );\n                last_li = list[1] = [ \"listitem\" ];\n              }\n              else {\n                // We aren't deep enough to be strictly a new level. This is\n                // where Md.pl goes nuts. If the indent matches a level in the\n                // stack, put it there, else put it one deeper then the\n                // wanted_depth deserves.\n                var found = false;\n                for ( i = 0; i < stack.length; i++ ) {\n                  if ( stack[ i ].indent != m[1] ) continue;\n                  list = stack[ i ].list;\n                  stack.splice( i+1, stack.length - (i+1) );\n                  found = true;\n                  break;\n                }\n\n                if (!found) {\n                  //print(\"not found. l:\", uneval(l));\n                  wanted_depth++;\n                  if ( wanted_depth <= stack.length ) {\n                    stack.splice(wanted_depth, stack.length - wanted_depth);\n                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n                    list = stack[wanted_depth-1].list;\n                    //print(\"list:\", uneval(list) );\n                  }\n                  else {\n                    //print (\"made new stack for messy indent\");\n                    list = make_list(m);\n                    last_li.push(list);\n                  }\n                }\n\n                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n                last_li = [ \"listitem\" ];\n                list.push(last_li);\n              } // end depth of shenegains\n              nl = \"\";\n            }\n\n            // Add content\n            if ( l.length > m[0].length ) {\n              li_accumulate += nl + l.substr( m[0].length );\n            }\n          } // tight_search\n\n          if ( li_accumulate.length ) {\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\n            // Loose mode will have been dealt with. Reset it\n            loose = false;\n            li_accumulate = \"\";\n          }\n\n          // Look at the next block - we might have a loose list. Or an extra\n          // paragraph for the current li\n          var contained = get_contained_blocks( stack.length, next );\n\n          // Deal with code blocks or properly nested lists\n          if ( contained.length > 0 ) {\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n          }\n\n          var next_block = next[0] && next[0].valueOf() || \"\";\n\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n            block = next.shift();\n\n            // Check for an HR following a list: features/lists/hr_abutting\n            var hr = this.dialect.block.horizRule( block, next );\n\n            if ( hr ) {\n              ret.push.apply(ret, hr);\n              break;\n            }\n\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            loose = true;\n            continue loose_search;\n          }\n          break;\n        } // loose_search\n\n        return ret;\n      };\n    })(),\n\n    blockquote: function blockquote( block, next ) {\n      if ( !block.match( /^>/m ) )\n        return undefined;\n\n      var jsonml = [];\n\n      // separate out the leading abutting block, if any. I.e. in this case:\n      //\n      //  a\n      //  > b\n      //\n      if ( block[ 0 ] != \">\" ) {\n        var lines = block.split( /\\n/ ),\n            prev = [],\n            line_no = block.lineNumber;\n\n        // keep shifting lines until you find a crotchet\n        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n            prev.push( lines.shift() );\n            line_no++;\n        }\n\n        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n        // reassemble new block of just block quotes!\n        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n      }\n\n\n      // if the next block is also a blockquote merge it in\n      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n        var b = next.shift();\n        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n      }\n\n      // Strip off the leading \"> \" and re-process as a block.\n      var input = block.replace( /^> ?/gm, \"\" ),\n          old_tree = this.tree,\n          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n          attr = extract_attr( processedBlock );\n\n      // If any link references were found get rid of them\n      if ( attr && attr.references ) {\n        delete attr.references;\n        // And then remove the attribute object if it's empty\n        if ( isEmpty( attr ) ) {\n          processedBlock.splice( 1, 1 );\n        }\n      }\n\n      jsonml.push( processedBlock );\n      return jsonml;\n    },\n\n    referenceDefn: function referenceDefn( block, next) {\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n      // interesting matches are [ , ref_id, url, , title, title ]\n\n      if ( !block.match(re) )\n        return undefined;\n\n      // make an attribute node if it doesn't exist\n      if ( !extract_attr( this.tree ) ) {\n        this.tree.splice( 1, 0, {} );\n      }\n\n      var attrs = extract_attr( this.tree );\n\n      // make a references hash if it doesn't exist\n      if ( attrs.references === undefined ) {\n        attrs.references = {};\n      }\n\n      var b = this.loop_re_over_block(re, block, function( m ) {\n\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\n          href: m[2]\n        };\n\n        if ( m[4] !== undefined )\n          ref.title = m[4];\n        else if ( m[5] !== undefined )\n          ref.title = m[5];\n\n      } );\n\n      if ( b.length )\n        next.unshift( mk_block( b, block.trailing ) );\n\n      return [];\n    },\n\n    para: function para( block, next ) {\n      // everything's a para!\n      return [ [\"para\"].concat( this.processInline( block ) ) ];\n    }\n  }\n};\n\nMarkdown.dialects.Gruber.inline = {\n\n    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n      var m,\n          res,\n          lastIndex = 0;\n\n      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\n      m = re.exec( text );\n      if (!m) {\n        // Just boring text\n        return [ text.length, text ];\n      }\n      else if ( m[1] ) {\n        // Some un-interesting text matched. Return that first\n        return [ m[1].length, m[1] ];\n      }\n\n      var res;\n      if ( m[2] in this.dialect.inline ) {\n        res = this.dialect.inline[ m[2] ].call(\n                  this,\n                  text.substr( m.index ), m, previous_nodes || [] );\n      }\n      // Default for now to make dev easier. just slurp special and output it.\n      res = res || [ m[2].length, m[2] ];\n      return res;\n    },\n\n    __call__: function inline( text, patterns ) {\n\n      var out = [],\n          res;\n\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n          out[ out.length-1 ] += x;\n        else\n          out.push(x);\n      }\n\n      while ( text.length > 0 ) {\n        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n        text = text.substr( res.shift() );\n        forEach(res, add )\n      }\n\n      return out;\n    },\n\n    // These characters are intersting elsewhere, so have rules for them so that\n    // chunks of plain text blocks don't include them\n    \"]\": function () {},\n    \"}\": function () {},\n\n    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\n    \"\\\\\": function escaped( text ) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if ( this.dialect.inline.__escape__.exec( text ) )\n        return [ 2, text.charAt( 1 ) ];\n      else\n        // Not an esacpe\n        return [ 1, \"\\\\\" ];\n    },\n\n    \"![\": function image( text ) {\n\n      // Unlike images, alt text is plain text only. no other elements are\n      // allowed in there\n\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { alt: m[1], href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        return [ m[0].length, [ \"img\", attrs ] ];\n      }\n\n      // ![Alt text][id]\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\n      if ( m ) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n      }\n\n      // Just consume the '!['\n      return [ 2, \"![\" ];\n    },\n\n    \"[\": function link( text ) {\n\n      var orig = String(text);\n      // Inline content is possible inside `link text`\n      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\n      // No closing ']' found. Just consume the [\n      if ( !res ) return [ 1, \"[\" ];\n\n      var consumed = 1 + res[ 0 ],\n          children = res[ 1 ],\n          link,\n          attrs;\n\n      // At this point the first [...] has been parsed. See what follows to find\n      // out which kind of link we are (reference or direct url)\n      text = text.substr( consumed );\n\n      // [link text](/path/to/img.jpg \"Optional title\")\n      //                 1            2       3         <--- captures\n      // This will capture up to the last paren in the block. We then pull\n      // back based on if there a matching ones in the url\n      //    ([here](/url/(test))\n      // The parens have to be balanced\n      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n      if ( m ) {\n        var url = m[1];\n        consumed += m[0].length;\n\n        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n          url = url.substring( 1, url.length - 1 );\n\n        // If there is a title we don't have to worry about parens in the url\n        if ( !m[3] ) {\n          var open_parens = 1; // One open that isn't in the capture\n          for ( var len = 0; len < url.length; len++ ) {\n            switch ( url[len] ) {\n            case \"(\":\n              open_parens++;\n              break;\n            case \")\":\n              if ( --open_parens == 0) {\n                consumed -= url.length - len;\n                url = url.substring(0, len);\n              }\n              break;\n            }\n          }\n        }\n\n        // Process escapes only\n        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\n        attrs = { href: url || \"\" };\n        if ( m[3] !== undefined)\n          attrs.title = m[3];\n\n        link = [ \"link\", attrs ].concat( children );\n        return [ consumed, link ];\n      }\n\n      // [Alt text][id]\n      // [Alt text] [id]\n      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\n      if ( m ) {\n\n        consumed += m[ 0 ].length;\n\n        // [links][] uses links as its reference\n        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\n        link = [ \"link_ref\", attrs ].concat( children );\n\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n        return [ consumed, link ];\n      }\n\n      // [id]\n      // Only if id is plain (no formatting.)\n      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\n        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n        link = [ \"link_ref\", attrs, children[0] ];\n        return [ consumed, link ];\n      }\n\n      // Just consume the \"[\"\n      return [ 1, \"[\" ];\n    },\n\n\n    \"<\": function autoLink( text ) {\n      var m;\n\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n        if ( m[3] ) {\n          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\n        }\n        else if ( m[2] == \"mailto\" ) {\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n        }\n        else\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n      }\n\n      return [ 1, \"<\" ];\n    },\n\n    \"`\": function inlineCode( text ) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\n      if ( m && m[2] )\n        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n      else {\n        // TODO: No matching end code found - warn!\n        return [ 1, \"`\" ];\n      }\n    },\n\n    \"  \\n\": function lineBreak( text ) {\n      return [ 3, [ \"linebreak\" ] ];\n    }\n\n};\n\n// Meta Helper/generator method for em and strong handling\nfunction strong_em( tag, md ) {\n\n  var state_slot = tag + \"_state\",\n      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n  function CloseTag(len) {\n    this.len_after = len;\n    this.name = \"close_\" + md;\n  }\n\n  return function ( text, orig_match ) {\n\n    if ( this[state_slot][0] == md ) {\n      // Most recent em is of this type\n      //D:this.debug(\"closing\", md);\n      this[state_slot].shift();\n\n      // \"Consume\" everything to go back to the recrusion in the else-block below\n      return[ text.length, new CloseTag(text.length-md.length) ];\n    }\n    else {\n      // Store a clone of the em/strong states\n      var other = this[other_slot].slice(),\n          state = this[state_slot].slice();\n\n      this[state_slot].unshift(md);\n\n      //D:this.debug_indent += \"  \";\n\n      // Recurse\n      var res = this.processInline( text.substr( md.length ) );\n      //D:this.debug_indent = this.debug_indent.substr(2);\n\n      var last = res[res.length - 1];\n\n      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n      var check = this[state_slot].shift();\n      if ( last instanceof CloseTag ) {\n        res.pop();\n        // We matched! Huzzah.\n        var consumed = text.length - last.len_after;\n        return [ consumed, [ tag ].concat(res) ];\n      }\n      else {\n        // Restore the state of the other kind. We might have mistakenly closed it.\n        this[other_slot] = other;\n        this[state_slot] = state;\n\n        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n        return [ md.length, md ];\n      }\n    }\n  }; // End returned function\n}\n\nMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\nMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\nMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\nMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\n\n// Build default order from insertion order.\nMarkdown.buildBlockOrder = function(d) {\n  var ord = [];\n  for ( var i in d ) {\n    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n    ord.push( i );\n  }\n  d.__order__ = ord;\n};\n\n// Build patterns for inline matcher\nMarkdown.buildInlinePatterns = function(d) {\n  var patterns = [];\n\n  for ( var i in d ) {\n    // __foo__ is reserved and not a pattern\n    if ( i.match( /^__.*__$/) ) continue;\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n             .replace( /\\n/, \"\\\\n\" );\n    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n  }\n\n  patterns = patterns.join(\"|\");\n  d.__patterns__ = patterns;\n  //print(\"patterns:\", uneval( patterns ) );\n\n  var fn = d.__call__;\n  d.__call__ = function(text, pattern) {\n    if ( pattern != undefined ) {\n      return fn.call(this, text, pattern);\n    }\n    else\n    {\n      return fn.call(this, text, patterns);\n    }\n  };\n};\n\nMarkdown.DialectHelpers = {};\nMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n  var consumed = 0,\n      nodes = [];\n\n  while ( true ) {\n    if ( text.charAt( consumed ) == want ) {\n      // Found the character we were looking for\n      consumed++;\n      return [ consumed, nodes ];\n    }\n\n    if ( consumed >= text.length ) {\n      // No closing char found. Abort.\n      return null;\n    }\n\n    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n    consumed += res[ 0 ];\n    // Add any returned nodes.\n    nodes.push.apply( nodes, res.slice( 1 ) );\n  }\n}\n\n// Helper function to make sub-classing a dialect easier\nMarkdown.subclassDialect = function( d ) {\n  function Block() {}\n  Block.prototype = d.block;\n  function Inline() {}\n  Inline.prototype = d.inline;\n\n  return { block: new Block(), inline: new Inline() };\n};\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\nMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n  var meta = split_meta_hash( meta_string ),\n      attr = {};\n\n  for ( var i = 0; i < meta.length; ++i ) {\n    // id: #foo\n    if ( /^#/.test( meta[ i ] ) ) {\n      attr.id = meta[ i ].substring( 1 );\n    }\n    // class: .foo\n    else if ( /^\\./.test( meta[ i ] ) ) {\n      // if class already exists, append the new one\n      if ( attr[\"class\"] ) {\n        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n      }\n      else {\n        attr[\"class\"] = meta[ i ].substring( 1 );\n      }\n    }\n    // attribute: foo=bar\n    else if ( /\\=/.test( meta[ i ] ) ) {\n      var s = meta[ i ].split( /\\=/ );\n      attr[ s[ 0 ] ] = s[ 1 ];\n    }\n  }\n\n  return attr;\n}\n\nfunction split_meta_hash( meta_string ) {\n  var meta = meta_string.split( \"\" ),\n      parts = [ \"\" ],\n      in_quotes = false;\n\n  while ( meta.length ) {\n    var letter = meta.shift();\n    switch ( letter ) {\n      case \" \" :\n        // if we're in a quoted section, keep it\n        if ( in_quotes ) {\n          parts[ parts.length - 1 ] += letter;\n        }\n        // otherwise make a new part\n        else {\n          parts.push( \"\" );\n        }\n        break;\n      case \"'\" :\n      case '\"' :\n        // reverse the quotes and move straight on\n        in_quotes = !in_quotes;\n        break;\n      case \"\\\\\" :\n        // shift off the next letter to be used straight away.\n        // it was escaped so we'll keep it whatever it is\n        letter = meta.shift();\n      default :\n        parts[ parts.length - 1 ] += letter;\n        break;\n    }\n  }\n\n  return parts;\n}\n\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n  // we're only interested in the first block\n  if ( block.lineNumber > 1 ) return undefined;\n\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\n  // make an attribute node if it doesn't exist\n  if ( !extract_attr( this.tree ) ) {\n    this.tree.splice( 1, 0, {} );\n  }\n\n  var pairs = block.split( /\\n/ );\n  for ( p in pairs ) {\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n        key = m[ 1 ].toLowerCase(),\n        value = m[ 2 ];\n\n    this.tree[ 1 ][ key ] = value;\n  }\n\n  // document_meta produces no content!\n  return [];\n};\n\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n  // check if the last line of the block is an meta hash\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n  if ( !m ) return undefined;\n\n  // process the meta hash\n  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\n  var hash;\n\n  // if we matched ^ then we need to apply meta to the previous block\n  if ( m[ 1 ] === \"\" ) {\n    var node = this.tree[ this.tree.length - 1 ];\n    hash = extract_attr( node );\n\n    // if the node is a string (rather than JsonML), bail\n    if ( typeof node === \"string\" ) return undefined;\n\n    // create the attribute hash if it doesn't exist\n    if ( !hash ) {\n      hash = {};\n      node.splice( 1, 0, hash );\n    }\n\n    // add the attributes in\n    for ( a in attr ) {\n      hash[ a ] = attr[ a ];\n    }\n\n    // return nothing so the meta hash is removed\n    return [];\n  }\n\n  // pull the meta hash off the block and process what's left\n  var b = block.replace( /\\n.*$/, \"\" ),\n      result = this.processBlock( b, [] );\n\n  // get or make the attributes hash\n  hash = extract_attr( result[ 0 ] );\n  if ( !hash ) {\n    hash = {};\n    result[ 0 ].splice( 1, 0, hash );\n  }\n\n  // attach the attributes to the block\n  for ( a in attr ) {\n    hash[ a ] = attr[ a ];\n  }\n\n  return result;\n};\n\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n  // one or more terms followed by one or more definitions, in a single block\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n      list = [ \"dl\" ],\n      i, m;\n\n  // see if we're dealing with a tight or loose block\n  if ( ( m = block.match( tight ) ) ) {\n    // pull subsequent tight DL blocks out of `next`\n    var blocks = [ block ];\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\n      blocks.push( next.shift() );\n    }\n\n    for ( var b = 0; b < blocks.length; ++b ) {\n      var m = blocks[ b ].match( tight ),\n          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n          defns = m[ 2 ].split( /\\n:\\s+/ );\n\n      // print( uneval( m ) );\n\n      for ( i = 0; i < terms.length; ++i ) {\n        list.push( [ \"dt\", terms[ i ] ] );\n      }\n\n      for ( i = 0; i < defns.length; ++i ) {\n        // run inline processing over the definition\n        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n      }\n    }\n  }\n  else {\n    return undefined;\n  }\n\n  return [ list ];\n};\n\n// splits on unescaped instances of @ch. If @ch is not a character the result\n// can be unpredictable\n\nMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\n    var _split_on_unescaped = function(s, ch) {\n        ch = ch || '\\\\s';\n        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n        var res = [ ],\n            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n            m;\n        while(m = s.match(r)) {\n            res.push(m[1]);\n            s = m[2];\n        }\n        res.push(s);\n        return res;\n    }\n\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        // find at least an unescaped pipe in each line\n        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        i, m;\n    if (m = block.match(leading_pipe)) {\n        // remove leading pipes in contents\n        // (header and horizontal rule already have the leading pipe left out)\n        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n    } else if (! ( m = block.match(no_leading_pipe))) {\n        return undefined;\n    }\n\n    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\n    // remove trailing pipes, then split on pipes\n    // (no escaped pipes are allowed in horizontal rule)\n    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\n    // process alignment\n    var html_attrs = [ ];\n    forEach (m[2], function (s) {\n        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n        else                              html_attrs.push({});\n    });\n\n    // now for the header, avoid escaped pipes\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n    for (i = 0; i < m[1].length; i++) {\n        table[1][1].push(['th', html_attrs[i] || {}].concat(\n            this.processInline(m[1][i].trim())));\n    }\n\n    // now for body contents\n    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n        var html_row = ['tr'];\n        row = _split_on_unescaped(row, '|');\n        for (i = 0; i < row.length; i++) {\n            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n        }\n        table[2].push(html_row);\n    }, this);\n\n    return [table];\n}\n\nMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n  if ( !out.length ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // get the preceeding element\n  var before = out[ out.length - 1 ];\n\n  if ( typeof before === \"string\" ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // match a meta hash\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\n  // no match, false alarm\n  if ( !m ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // attach the attributes to the preceeding element\n  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n      attr = extract_attr( before );\n\n  if ( !attr ) {\n    attr = {};\n    before.splice( 1, 0, attr );\n  }\n\n  for ( var k in meta ) {\n    attr[ k ] = meta[ k ];\n  }\n\n  // cut out the string and replace it with nothing\n  return [ m[ 0 ].length, \"\" ];\n};\n\nMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\nvar isArray = Array.isArray || function(obj) {\n  return Object.prototype.toString.call(obj) == \"[object Array]\";\n};\n\nvar forEach;\n// Don't mess with Array.prototype. Its not friendly\nif ( Array.prototype.forEach ) {\n  forEach = function( arr, cb, thisp ) {\n    return arr.forEach( cb, thisp );\n  };\n}\nelse {\n  forEach = function(arr, cb, thisp) {\n    for (var i = 0; i < arr.length; i++) {\n      cb.call(thisp || arr, arr[i], i, arr);\n    }\n  }\n}\n\nvar isEmpty = function( obj ) {\n  for ( var key in obj ) {\n    if ( hasOwnProperty.call( obj, key ) ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction extract_attr( jsonml ) {\n  return isArray(jsonml)\n      && jsonml.length > 1\n      && typeof jsonml[ 1 ] === \"object\"\n      && !( isArray(jsonml[ 1 ]) )\n      ? jsonml[ 1 ]\n      : undefined;\n}\n\n\n\n/**\n *  renderJsonML( jsonml[, options] ) -> String\n *  - jsonml (Array): JsonML array to render to XML\n *  - options (Object): options\n *\n *  Converts the given JsonML into well-formed XML.\n *\n *  The options currently understood are:\n *\n *  - root (Boolean): wether or not the root node should be included in the\n *    output, or just its children. The default `false` is to not include the\n *    root itself.\n */\nexpose.renderJsonML = function( jsonml, options ) {\n  options = options || {};\n  // include the root element in the rendered output?\n  options.root = options.root || false;\n\n  var content = [];\n\n  if ( options.root ) {\n    content.push( render_tree( jsonml ) );\n  }\n  else {\n    jsonml.shift(); // get rid of the tag\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n      jsonml.shift(); // get rid of the attributes\n    }\n\n    while ( jsonml.length ) {\n      content.push( render_tree( jsonml.shift() ) );\n    }\n  }\n\n  return content.join( \"\\n\\n\" );\n};\n\nfunction escapeHTML( text ) {\n  return text.replace( /&/g, \"&amp;\" )\n             .replace( /</g, \"&lt;\" )\n             .replace( />/g, \"&gt;\" )\n             .replace( /\"/g, \"&quot;\" )\n             .replace( /'/g, \"&#39;\" );\n}\n\nfunction render_tree( jsonml ) {\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return escapeHTML( jsonml );\n  }\n\n  var tag = jsonml.shift(),\n      attributes = {},\n      content = [];\n\n  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( render_tree( jsonml.shift() ) );\n  }\n\n  var tag_attrs = \"\";\n  for ( var a in attributes ) {\n    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n    return \"<\"+ tag + tag_attrs + \"/>\";\n  }\n  else {\n    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n  }\n}\n\nfunction convert_tree_to_html( tree, references, options ) {\n  var i;\n  options = options || {};\n\n  // shallow clone\n  var jsonml = tree.slice( 0 );\n\n  if ( typeof options.preprocessTreeNode === \"function\" ) {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n  }\n\n  // Clone attributes if they exist\n  var attrs = extract_attr( jsonml );\n  if ( attrs ) {\n    jsonml[ 1 ] = {};\n    for ( i in attrs ) {\n      jsonml[ 1 ][ i ] = attrs[ i ];\n    }\n    attrs = jsonml[ 1 ];\n  }\n\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return jsonml;\n  }\n\n  // convert this node\n  switch ( jsonml[ 0 ] ) {\n    case \"header\":\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n      delete jsonml[ 1 ].level;\n      break;\n    case \"bulletlist\":\n      jsonml[ 0 ] = \"ul\";\n      break;\n    case \"numberlist\":\n      jsonml[ 0 ] = \"ol\";\n      break;\n    case \"listitem\":\n      jsonml[ 0 ] = \"li\";\n      break;\n    case \"para\":\n      jsonml[ 0 ] = \"p\";\n      break;\n    case \"markdown\":\n      jsonml[ 0 ] = \"html\";\n      if ( attrs ) delete attrs.references;\n      break;\n    case \"code_block\":\n      jsonml[ 0 ] = \"pre\";\n      i = attrs ? 2 : 1;\n      var code = [ \"code\" ];\n      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n      jsonml[ i ] = code;\n      break;\n    case \"inlinecode\":\n      jsonml[ 0 ] = \"code\";\n      break;\n    case \"img\":\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\n      delete jsonml[ 1 ].href;\n      break;\n    case \"linebreak\":\n      jsonml[ 0 ] = \"br\";\n    break;\n    case \"link\":\n      jsonml[ 0 ] = \"a\";\n      break;\n    case \"link_ref\":\n      jsonml[ 0 ] = \"a\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.href = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n    case \"img_ref\":\n      jsonml[ 0 ] = \"img\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.src = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n  }\n\n  // convert all the children\n  i = 1;\n\n  // deal with the attribute node, if it exists\n  if ( attrs ) {\n    // if there are keys, skip over it\n    for ( var key in jsonml[ 1 ] ) {\n        i = 2;\n        break;\n    }\n    // if there aren't, remove it\n    if ( i === 1 ) {\n      jsonml.splice( i, 1 );\n    }\n  }\n\n  for ( ; i < jsonml.length; ++i ) {\n    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n  }\n\n  return jsonml;\n}\n\n\n// merges adjacent text nodes into a single node\nfunction merge_text_nodes( jsonml ) {\n  // skip the tag name and attribute hash\n  var i = extract_attr( jsonml ) ? 2 : 1;\n\n  while ( i < jsonml.length ) {\n    // if it's a string check the next item too\n    if ( typeof jsonml[ i ] === \"string\" ) {\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n        // merge the second string into the first and remove it\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n      }\n      else {\n        ++i;\n      }\n    }\n    // if it's not a string recurse\n    else {\n      merge_text_nodes( jsonml[ i ] );\n      ++i;\n    }\n  }\n}\n\n} )( (function() {\n  if ( typeof exports === \"undefined\" ) {\n    window.markdown = {};\n    return window.markdown;\n  }\n  else {\n    return exports;\n  }\n} )() );\n","// super simple module for the most common nodejs use case.\nexports.markdown = require(\"./markdown\");\nexports.parse = exports.markdown.toHTML;\n","import Header from './Header'\nimport render from '../helpers/render'\nimport { onlyTitle, onlyDate, removeExtension } from '../helpers/utils'\nimport { getPostJson } from '../helpers/getPostJson'\nimport { markdown } from 'markdown'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\ndayjs.extend(relativeTime)\n\nexport default function PostSingle(githubLink) {\n  getPostJson(githubLink).then(item => {\n    // const meta = matter(item)\n    const title = onlyTitle(githubLink)\n    const date = dayjs().to(dayjs(onlyDate(githubLink)))\n    const content = markdown.toHTML(item)\n    document.title = `${title} - Alessandro Muraro - Frontend Developer`\n    document.querySelector('#nav').innerHTML = Header()\n\n    const html = `\n      <div class=\"pageContent pageContent--post\">\n        <h1 class=\"pageContent__title title title--h1\">${title}</h1>\n        <div class=\"pageContent__date date\">${date}</div>\n        <div class=\"pageContent__content\">${content}</div>\n      </div>\n    `\n\n    render('#content', html)\n  })\n}\n","import render from '../helpers/render'\nimport Header from './Header'\n\nexport default function Home() {\n  document.title = 'Alessandro Muraro - Frontend Developer'\n  document.querySelector('#nav').innerHTML = Header()\n  const html = `\n  <div class=\"pageHome\">\n    <div class=\"contentBlock contentBlock--home\">\n      <div class=\"contentBlock__preTitle u-center\">\n        Hi there, I'm Alessandro Muraro.\n      </div>\n      <h1 class=\"contentBlock__title u-center\">\n        I'm a frontend developer,<br />I make websites.\n        <span class=\"emoji\" role=\"img\" aria-label=\"waving hand\">\n          👋\n        </span>\n      </h1>\n    </div>\n  </div>\n  `\n  render('#content', html)\n}\n","export default function Switch() {\n  const switchTrigger = document.querySelector('#switch')\n  const body = document.querySelector('body')\n\n  const currentTheme = localStorage.getItem('theme')\n  if (!currentTheme) {\n    body.classList.add('ui-light')\n    switchTrigger.setAttribute('data-theme', 'ui-light')\n  } else {\n    body.classList.add(currentTheme)\n    switchTrigger.setAttribute('data-theme', currentTheme)\n  }\n\n  switchTrigger.addEventListener('click', () => {\n    event.target.blur()\n    const newTheme =\n      switchTrigger.getAttribute('data-theme') === 'ui-light'\n        ? 'ui-dark'\n        : 'ui-light'\n    switchTrigger.setAttribute('data-theme', newTheme)\n    body.className = newTheme\n    localStorage.setItem('theme', newTheme)\n  })\n}\n","function isPushStateAvailable() {\n  return !!(\n    typeof window !== 'undefined' &&\n    window.history &&\n    window.history.pushState\n  );\n}\n\nfunction Navigo(r, useHash, hash) {\n  this.root = null;\n  this._routes = [];\n  this._useHash = useHash;\n  this._hash = typeof hash === 'undefined' ? '#' : hash;\n  this._paused = false;\n  this._destroyed = false;\n  this._lastRouteResolved = null;\n  this._notFoundHandler = null;\n  this._defaultHandler = null;\n  this._usePushState = !useHash && isPushStateAvailable();\n  this._onLocationChange = this._onLocationChange.bind(this);\n  this._genericHooks = null;\n  this._historyAPIUpdateMethod = 'pushState';\n\n  if (r) {\n    this.root = useHash ? r.replace(/\\/$/, '/' + this._hash) : r.replace(/\\/$/, '');\n  } else if (useHash) {\n    this.root = this._cLoc().split(this._hash)[0].replace(/\\/$/, '/' + this._hash);\n  }\n\n  this._listen();\n  this.updatePageLinks();\n}\n\nfunction clean(s) {\n  if (s instanceof RegExp) return s;\n  return s.replace(/\\/+$/, '').replace(/^\\/+/, '^/');\n}\n\nfunction regExpResultToParams(match, names) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match\n    .slice(1, match.length)\n    .reduce((params, value, index) => {\n      if (params === null) params = {};\n      params[names[index]] = decodeURIComponent(value);\n      return params;\n    }, null);\n}\n\nfunction replaceDynamicURLParts(route) {\n  var paramNames = [], regexp;\n\n  if (route instanceof RegExp) {\n    regexp = route;\n  } else {\n    regexp = new RegExp(\n      route.replace(Navigo.PARAMETER_REGEXP, function (full, dots, name) {\n        paramNames.push(name);\n        return Navigo.REPLACE_VARIABLE_REGEXP;\n      })\n        .replace(Navigo.WILDCARD_REGEXP, Navigo.REPLACE_WILDCARD) + Navigo.FOLLOWED_BY_SLASH_REGEXP\n      , Navigo.MATCH_REGEXP_FLAGS);\n  }\n  return { regexp, paramNames };\n}\n\nfunction getUrlDepth(url) {\n  return url.replace(/\\/$/, '').split('/').length;\n}\n\nfunction compareUrlDepth(urlA, urlB) {\n  return getUrlDepth(urlB) - getUrlDepth(urlA);\n}\n\nfunction findMatchedRoutes(url, routes = []) {\n  return routes\n    .map(route => {\n      var { regexp, paramNames } = replaceDynamicURLParts(clean(route.route));\n      var match = url.replace(/^\\/+/, '/').match(regexp);\n      var params = regExpResultToParams(match, paramNames);\n\n      return match ? { match, route, params } : false;\n    })\n    .filter(m => m);\n}\n\nfunction match(url, routes) {\n  return findMatchedRoutes(url, routes)[0] || false;\n}\n\nfunction root(url, routes) {\n  var matched = routes.map(\n    route => route.route === '' || route.route === '*' ? url : url.split(new RegExp(route.route + '($|\\/)'))[0]\n  );\n  var fallbackURL = clean(url);\n\n  if (matched.length > 1) {\n    return matched.reduce((result, url) => {\n      if (result.length > url.length) result = url;\n      return result;\n    }, matched[0]);\n  } else if (matched.length === 1) {\n    return matched[0];\n  }\n  return fallbackURL;\n}\n\nfunction isHashChangeAPIAvailable() {\n  return typeof window !== 'undefined' && 'onhashchange' in window;\n}\n\nfunction extractGETParameters(url) {\n  return url.split(/\\?(.*)?$/).slice(1).join('');\n}\n\nfunction getOnlyURL(url, useHash, hash) {\n  var onlyURL = url, split;\n  var cleanGETParam = str => str.split(/\\?(.*)?$/)[0];\n\n  if (typeof hash === 'undefined') {\n    // To preserve BC\n    hash = '#';\n  }\n\n  if (isPushStateAvailable() && !useHash) {\n    onlyURL = cleanGETParam(url).split(hash)[0];\n  } else {\n    split = url.split(hash);\n    onlyURL = split.length > 1 ? cleanGETParam(split[1]) : cleanGETParam(split[0]);\n  }\n\n  return onlyURL;\n}\n\nfunction manageHooks(handler, hooks, params) {\n  if (hooks && typeof hooks === 'object') {\n    if (hooks.before) {\n      hooks.before((shouldRoute = true) => {\n        if (!shouldRoute) return;\n        handler();\n        hooks.after && hooks.after(params);\n      }, params);\n      return;\n    } else if (hooks.after) {\n      handler();\n      hooks.after && hooks.after(params);\n      return;\n    }\n  }\n  handler();\n}\n\nfunction isHashedRoot(url, useHash, hash) {\n  if (isPushStateAvailable() && !useHash) {\n    return false;\n  }\n\n  if (!url.match(hash)) {\n    return false;\n  }\n\n  let split = url.split(hash);\n\n  return split.length < 2 || split[1] === '';\n}\n\nNavigo.prototype = {\n  helpers: {\n    match,\n    root,\n    clean,\n    getOnlyURL\n  },\n  navigate: function (path, absolute) {\n    var to;\n\n    path = path || '';\n    if (this._usePushState) {\n      to = (!absolute ? this._getRoot() + '/' : '') + path.replace(/^\\/+/, '/');\n      to = to.replace(/([^:])(\\/{2,})/g, '$1/');\n      history[this._historyAPIUpdateMethod]({}, '', to);\n      this.resolve();\n    } else if (typeof window !== 'undefined') {\n      path = path.replace(new RegExp('^' + this._hash), '');\n      window.location.href =\n        window.location.href\n          .replace(/#$/, '')\n          .replace(new RegExp(this._hash + '.*$'), '') + this._hash + path;\n    }\n    return this;\n  },\n  on: function (...args) {\n    if (typeof args[0] === 'function') {\n      this._defaultHandler = { handler: args[0], hooks: args[1] };\n    } else if (args.length >= 2) {\n      if (args[0] === '/') {\n        let func = args[1];\n\n        if (typeof args[1] === 'object') {\n          func = args[1].uses;\n        }\n\n        this._defaultHandler = { handler: func, hooks: args[2] };\n      } else {\n        this._add(args[0], args[1], args[2]);\n      }\n    } else if (typeof args[0] === 'object') {\n      let orderedRoutes = Object.keys(args[0]).sort(compareUrlDepth);\n\n      orderedRoutes.forEach(route => {\n        this.on(route, args[0][route]);\n      });\n    }\n    return this;\n  },\n  off: function (handler) {\n    if (this._defaultHandler !== null && handler === this._defaultHandler.handler) {\n      this._defaultHandler = null;\n    } else if (this._notFoundHandler !== null && handler === this._notFoundHandler.handler) {\n      this._notFoundHandler = null;\n    }\n    this._routes = this._routes.reduce((result, r) => {\n      if (r.handler !== handler) result.push(r);\n      return result;\n    }, []);\n    return this;\n  },\n  notFound: function (handler, hooks) {\n    this._notFoundHandler = { handler, hooks: hooks };\n    return this;\n  },\n  resolve: function (current) {\n    var handler, m;\n    var url = (current || this._cLoc()).replace(this._getRoot(), '');\n\n    if (this._useHash) {\n      url = url.replace(new RegExp('^\\/' + this._hash), '/');\n    }\n\n    let GETParameters = extractGETParameters(current || this._cLoc());\n    let onlyURL = getOnlyURL(url, this._useHash, this._hash);\n\n    if (this._paused) return false;\n\n    if (\n      this._lastRouteResolved &&\n        onlyURL === this._lastRouteResolved.url &&\n        GETParameters === this._lastRouteResolved.query\n    ) {\n      if (this._lastRouteResolved.hooks && this._lastRouteResolved.hooks.already) {\n        this._lastRouteResolved.hooks.already(this._lastRouteResolved.params);\n      }\n      return false;\n    }\n\n    m = match(onlyURL, this._routes);\n\n    if (m) {\n      this._callLeave();\n      this._lastRouteResolved = {\n        url: onlyURL,\n        query: GETParameters,\n        hooks: m.route.hooks,\n        params: m.params,\n        name: m.route.name\n      };\n      handler = m.route.handler;\n      manageHooks(() => {\n        manageHooks(() => {\n          m.route.route instanceof RegExp ?\n            handler(...(m.match.slice(1, m.match.length))) :\n            handler(m.params, GETParameters);\n        }, m.route.hooks, m.params, this._genericHooks);\n      }, this._genericHooks, m.params);\n      return m;\n    } else if (this._defaultHandler && (\n      onlyURL === '' ||\n        onlyURL === '/' ||\n        onlyURL === this._hash ||\n        isHashedRoot(onlyURL, this._useHash, this._hash)\n    )) {\n      manageHooks(() => {\n        manageHooks(() => {\n          this._callLeave();\n          this._lastRouteResolved = { url: onlyURL, query: GETParameters, hooks: this._defaultHandler.hooks };\n          this._defaultHandler.handler(GETParameters);\n        }, this._defaultHandler.hooks);\n      }, this._genericHooks);\n      return true;\n    } else if (this._notFoundHandler) {\n      manageHooks(() => {\n        manageHooks(() => {\n          this._callLeave();\n          this._lastRouteResolved = { url: onlyURL, query: GETParameters, hooks: this._notFoundHandler.hooks };\n          this._notFoundHandler.handler(GETParameters);\n        }, this._notFoundHandler.hooks);\n      }, this._genericHooks);\n    }\n    return false;\n  },\n  destroy: function () {\n    this._routes = [];\n    this._destroyed = true;\n    this._lastRouteResolved = null;\n    this._genericHooks = null;\n    clearTimeout(this._listeningInterval);\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('popstate', this._onLocationChange);\n      window.removeEventListener('hashchange', this._onLocationChange);\n    }\n  },\n  updatePageLinks: function () {\n    var self = this;\n\n    if (typeof document === 'undefined') return;\n\n    this._findLinks().forEach(link => {\n      if (!link.hasListenerAttached) {\n        link.addEventListener('click', function (e) {\n          if((e.ctrlKey || e.metaKey) && e.target.tagName.toLowerCase() == 'a'){ return false; }\n          var location = self.getLinkPath(link);\n\n          if (!self._destroyed) {\n            e.preventDefault();\n            self.navigate(location.replace(/\\/+$/, '').replace(/^\\/+/, '/'));\n          }\n        });\n        link.hasListenerAttached = true;\n      }\n    });\n  },\n  generate: function (name, data = {}) {\n    var result = this._routes.reduce((result, route) => {\n      var key;\n\n      if (route.name === name) {\n        result = route.route;\n        for (key in data) {\n          result = result.toString().replace(':' + key, data[key]);\n        }\n      }\n      return result;\n    }, '');\n\n    return this._useHash ? this._hash + result : result;\n  },\n  link: function (path) {\n    return this._getRoot() + path;\n  },\n  pause: function (status = true) {\n    this._paused = status;\n    if (status) {\n      this._historyAPIUpdateMethod = 'replaceState';\n    } else {\n      this._historyAPIUpdateMethod = 'pushState';\n    }\n  },\n  resume: function () {\n    this.pause(false);\n  },\n  historyAPIUpdateMethod: function (value) {\n    if (typeof value === 'undefined') return this._historyAPIUpdateMethod;\n    this._historyAPIUpdateMethod = value;\n    return value;\n  },\n  disableIfAPINotAvailable: function () {\n    if (!isPushStateAvailable()) {\n      this.destroy();\n    }\n  },\n  lastRouteResolved() {\n    return this._lastRouteResolved;\n  },\n  getLinkPath(link) {\n    return link.getAttribute('href');\n  },\n  hooks(hooks) {\n    this._genericHooks = hooks;\n  },\n  _add: function (route, handler = null, hooks = null) {\n    if (typeof route === 'string') {\n      route = encodeURI(route);\n    }\n    this._routes.push(\n      typeof handler === 'object' ? {\n        route,\n        handler: handler.uses,\n        name: handler.as,\n        hooks: hooks || handler.hooks\n      } : { route, handler, hooks: hooks }\n    );\n\n    return this._add;\n  },\n  _getRoot: function () {\n    if (this.root !== null) return this.root;\n    this.root = root(this._cLoc().split('?')[0], this._routes);\n    return this.root;\n  },\n  _listen: function () {\n    if (this._usePushState) {\n      window.addEventListener('popstate', this._onLocationChange);\n    } else if (isHashChangeAPIAvailable()) {\n      window.addEventListener('hashchange', this._onLocationChange);\n    } else {\n      let cached = this._cLoc(), current, check;\n\n      check = () => {\n        current = this._cLoc();\n        if (cached !== current) {\n          cached = current;\n          this.resolve();\n        }\n        this._listeningInterval = setTimeout(check, 200);\n      };\n      check();\n    }\n  },\n  _cLoc: function () {\n    if (typeof window !== 'undefined') {\n      if (typeof window.__NAVIGO_WINDOW_LOCATION_MOCK__ !== 'undefined') {\n        return window.__NAVIGO_WINDOW_LOCATION_MOCK__;\n      }\n      return clean(window.location.href);\n    }\n    return '';\n  },\n  _findLinks: function () {\n    return [].slice.call(document.querySelectorAll('[data-navigo]'));\n  },\n  _onLocationChange: function () {\n    this.resolve();\n  },\n  _callLeave() {\n    const lastRouteResolved = this._lastRouteResolved;\n\n    if (lastRouteResolved && lastRouteResolved.hooks && lastRouteResolved.hooks.leave) {\n      lastRouteResolved.hooks.leave(lastRouteResolved.params);\n    }\n  }\n};\n\nNavigo.PARAMETER_REGEXP = /([:*])(\\w+)/g;\nNavigo.WILDCARD_REGEXP = /\\*/g;\nNavigo.REPLACE_VARIABLE_REGEXP = '([^\\/]+)';\nNavigo.REPLACE_WILDCARD = '(?:.*)';\nNavigo.FOLLOWED_BY_SLASH_REGEXP = '(?:\\/$|$)';\nNavigo.MATCH_REGEXP_FLAGS = '';\n\nexport default Navigo;\n","import About from './components/About'\nimport Contacts from './components/Contacts'\nimport PostsList from './components/PostsList'\nimport PostSingle from './components/PostSingle'\nimport Home from './components/Home'\nimport render from './helpers/render'\nimport Switch from './components/Switch'\nimport Navigo from 'navigo'\nvar root = null\nvar useHash = true // Defaults to: false\nvar hash = '#!' // Defaults to: '#'\nvar router = new Navigo(root, useHash, hash)\n\nexport default function App() {\n  Switch()\n\n  router\n    .on({\n      about: function() {\n        About()\n      },\n      contacts: function() {\n        Contacts()\n      },\n      posts: function() {\n        PostsList()\n      },\n      'posts/:slug': function(params) {\n        PostSingle(params.slug)\n      },\n      '': function() {\n        Home()\n      }\n    })\n    .resolve()\n}\n","import App from './src/App'\nimport './src/scss/styles.scss'\n\nApp()\n"]}